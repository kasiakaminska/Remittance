
// Standard extensions get all permissions by default

grant codeBase "file:${{java.ext.dirs}}/*" {
        permission java.security.AllPermission;
};

// default permissions granted to all domains

grant {
        // Allows any thread to stop itself using the java.lang.Thread.stop()
        // method that takes no argument.
        // Note that this permission is granted by default only to remain
        // backwards compatible.
        // It is strongly recommended that you either remove this permission
        // from this policy file or further restrict it to code sources
        // that you specify, because Thread.stop() is potentially unsafe.
        // See "http://java.sun.com/notes" for more information.
        // permission java.lang.RuntimePermission "stopThread";

        // allows anyone to listen on un-privileged ports
        permission java.net.SocketPermission "localhost:1024-", "listen";

        // "standard" properties that can be read by anyone

        permission java.util.PropertyPermission "java.version", "read";
        permission java.util.PropertyPermission "java.vendor", "read";
        permission java.util.PropertyPermission "java.vendor.url", "read";
        permission java.util.PropertyPermission "java.class.version", "read";
        permission java.util.PropertyPermission "os.name", "read";
        permission java.util.PropertyPermission "os.version", "read";
        permission java.util.PropertyPermission "os.arch", "read";
        permission java.util.PropertyPermission "file.separator", "read";
        permission java.util.PropertyPermission "path.separator", "read";
        permission java.util.PropertyPermission "line.separator", "read";

        permission java.util.PropertyPermission "java.specification.version", "read";
        permission java.util.PropertyPermission "java.specification.vendor", "read";
        permission java.util.PropertyPermission "java.specification.name", "read";

        permission java.util.PropertyPermission "java.vm.specification.version", "read";
        permission java.util.PropertyPermission "java.vm.specification.vendor", "read";
        permission java.util.PropertyPermission "java.vm.specification.name", "read";
        permission java.util.PropertyPermission "java.vm.version", "read";
        permission java.util.PropertyPermission "java.vm.vendor", "read";
        permission java.util.PropertyPermission "java.vm.name", "read";
        
        permission java.util.PropertyPermission "wd.fbmd.file.obfuscate", "read";
        permission java.util.PropertyPermission "wd.esb.*", "read";
        permission java.util.PropertyPermission "encryption.manager.*", "read";
        permission java.util.PropertyPermission "wd.host", "read";
        permission java.util.PropertyPermission "wd.env", "read";
        permission java.util.PropertyPermission "wd.confidence.level", "read";
        permission java.util.PropertyPermission "wd.log.utc", "read";

        permission java.util.PropertyPermission "encoding.*", "read";
        permission java.util.PropertyPermission "mvflex.*", "read";
        permission java.util.PropertyPermission "mvel.*", "read";
        permission java.util.PropertyPermission "org.apache.*", "read";
        permission java.util.PropertyPermission "com.ctc.wstx.*", "read";
        
        permission java.util.PropertyPermission "user.dir", "read";
        permission java.util.PropertyPermission "cc.root.dir", "read";
        permission java.util.PropertyPermission "wd.slave.home.dir", "read";

        //required to read saxon and saxon-helper jars using reflection
        permission java.io.FilePermission "${wd.slave.home.dir}${/}lib${/}-", "read";
        permission java.io.FilePermission "${wd.slave.home.dir}${/}saxon${/}-", "read";
		
		//ICP-8086
		permission java.io.FilePermission "${wd.slave.home.dir}${/}\<inline\>", "read";
        permission java.io.FilePermission "${wd.slave.home.dir}${/}features.properties", "read";

        // allows to connect to any port
        permission java.net.SocketPermission "*", "accept,connect";
        
        //ESB-22564
        permission java.util.PropertyPermission "ws.connect.timeout.millis", "read";
        permission java.util.PropertyPermission "com.sun.xml.internal.fastinfoset.parser.string-interning", "read";
        permission java.util.PropertyPermission "com.sun.xml.internal.fastinfoset.parser.buffer-size", "read";
        permission java.util.PropertyPermission "com.sun.xml.internal.fastinfoset.serializer.character-encoding-scheme", "read";

        // ESB-23145
        permission java.util.PropertyPermission "wd.stats.enabled", "read";
        permission java.util.PropertyPermission "wd.stats.swh.root.path", "read";
        permission java.util.PropertyPermission "wd.stats.dedicated.logger.thread", "read";
        permission java.util.PropertyPermission "wd.disable.filesystem.stats.logging", "read";
        permission java.util.PropertyPermission "wd.run.unit.test.mode", "read";

        //GRIDCM-926
        permission java.util.PropertyPermission "cglib.debugLocation", "read";

        //GRIDCM-1609
        permission java.util.PropertyPermission "sun.arch.data.model", "read";

        //GRIDCM-1666
        permission java.util.PropertyPermission "studio.debugger.override.blobitory.address", "read";

        //GRIDCM-1725
        permission java.util.PropertyPermission "guava.concurrent.generate_cancellation_cause", "read";
        permission java.util.PropertyPermission "com.google.appengine.runtime.environment", "read";
        permission java.util.PropertyPermission "guice_custom_class_loading", "read";

        //GRIDCM-5934
        permission java.util.PropertyPermission "wd.integration.platform.service", "read";
        permission java.util.PropertyPermission "wd.maxam.service.name", "read";
};

// permissions granted to all jars in the lib directory

grant codeBase "file:${wd.slave.home.url}/lib/-" {

        permission java.security.AllPermission;

        permission java.util.PropertyPermission "*", "read";

        // for fop
        permission java.io.FilePermission "<<ALL FILES>>", "read";
        
	    // to read resources from jar files (e.g. spring/root.xml)
        permission java.io.FilePermission "${wd.slave.home.dir}${/}lib${/}-", "read";
        permission java.io.FilePermission "${wd.slave.home.dir}${/}saxon${/}-", "read";

        // full access to deploy dir
        permission java.io.FilePermission "${wd.slave.deploy.dir}", "read";
        permission java.io.FilePermission "${wd.slave.deploy.dir}${/}-", "read,write,delete";

        // read access to log dir
        permission java.io.FilePermission "${cc.requestid.logs.location}", "read";
        permission java.io.FilePermission "${cc.requestid.logs.location}${/}-", "read,write,delete";

        // full access to tmp dir
        permission java.io.FilePermission "${wd.slave.tmp.dir}", "read,write";
        permission java.io.FilePermission "${wd.slave.tmp.dir}${/}-", "read,write,delete";

        // full access to io tmp dir
        permission java.io.FilePermission "${java.io.tmpdir}", "read,write,delete";
        permission java.io.FilePermission "${java.io.tmpdir}${/}-", "read,write,delete";

        // read access to conf dir
        permission java.io.FilePermission "${wd.slave.home.dir}${/}conf${/}-", "read";

        // read access to installed dir
        permission java.io.FilePermission "${wd.slave.home.dir}${/}installed", "read";
        permission java.io.FilePermission "${wd.slave.home.dir}${/}installed${/}-", "read";

        permission java.net.SocketPermission "localhost:${wd.slave.http.port}", "accept,connect,listen";

        permission java.lang.RuntimePermission "accessDeclaredMembers";
        permission java.lang.reflect.ReflectPermission "suppressAccessChecks";
        permission java.lang.RuntimePermission "setContextClassLoader";

        permission java.lang.RuntimePermission "createClassLoader";
        permission java.lang.RuntimePermission "getClassLoader";

        // for ws-ut binding
        permission javax.security.auth.AuthPermission "modifyCredentials";
        permission javax.security.auth.AuthPermission "modifyPrivateCredentials";
        permission javax.security.auth.AuthPermission "modifyPrincipals";

        permission com.capeclear.mediation.MediationContextPermission "setInternal";
        permission com.capeclear.mediation.MediationContextPermission "setSecureBaseURL";
        permission com.capeclear.mediation.MediationContextPermission "demarcateDynamicJava";


        // for sftp, capeconnect and cloud-slave 
        permission java.util.PropertyPermission "*", "read,write";

        // if bouncycastle is not installed with JDK
        permission java.security.SecurityPermission "putProviderProperty.BC";
        permission java.security.SecurityPermission "insertProvider.BC";
        //this remove is used to work around the BC issue with the Dell endpoint
        permission java.security.SecurityPermission "removeProvider.BC";

        // for java-to-xml and xml-to-java
        permission java.lang.RuntimePermission "accessClassInPackage.sun.reflect";
};

// - This is the custom/dual policy security manager. Needs AllPermissions, otherwise things might break
grant codeBase "file:${wd.slave.home.url}/lib/runtime-security-manager.jar" {
    permission java.security.AllPermission;
};

grant codeBase "file:${wd.slave.home.url}/saxon/-" {

        permission java.security.AllPermission;

        permission java.util.PropertyPermission "*", "read";

        // for fop
        permission java.io.FilePermission "<<ALL FILES>>", "read";
        
	    // to read resources from jar files (e.g. spring/root.xml)
        permission java.io.FilePermission "${wd.slave.home.dir}${/}lib${/}-", "read";

        // full access to deploy dir
        permission java.io.FilePermission "${wd.slave.deploy.dir}", "read";
        permission java.io.FilePermission "${wd.slave.deploy.dir}${/}-", "read,write,delete";

        // read access to log dir
        permission java.io.FilePermission "${cc.requestid.logs.location}", "read";
        permission java.io.FilePermission "${cc.requestid.logs.location}${/}-", "read,write,delete";

        // full access to tmp dir
        permission java.io.FilePermission "${wd.slave.tmp.dir}", "read,write";
        permission java.io.FilePermission "${wd.slave.tmp.dir}${/}-", "read,write,delete";

        // full access to io tmp dir
        permission java.io.FilePermission "${java.io.tmpdir}", "read,write,delete";
        permission java.io.FilePermission "${java.io.tmpdir}${/}-", "read,write,delete";

        // read access to conf dir
        permission java.io.FilePermission "${wd.slave.home.dir}${/}conf${/}-", "read";

        // read access to installed dir
        permission java.io.FilePermission "${wd.slave.home.dir}${/}installed", "read";
        permission java.io.FilePermission "${wd.slave.home.dir}${/}installed${/}-", "read";

        permission java.lang.RuntimePermission "accessDeclaredMembers";
        permission java.lang.reflect.ReflectPermission "suppressAccessChecks";
        permission java.lang.RuntimePermission "setContextClassLoader";

        permission java.lang.RuntimePermission "createClassLoader";
        permission java.lang.RuntimePermission "getClassLoader";
};

// additional permissions granted to selected jars in the lib directory

grant codeBase "file:${wd.slave.home.url}/lib/cloud-slave.jar" {
        permission java.io.FilePermission "${wd.slave.deploy.dir}${/}-", "read,write,delete";
        // permission java.util.PropertyPermission "*", "write";

        permission java.security.SecurityPermission "getPolicy";
        permission java.security.SecurityPermission "setPolicy";

        permission java.security.SecurityPermission "setErr";
        permission java.security.SecurityPermission "setOut";
        permission java.lang.RuntimePermission "checkIO";
        permission java.lang.RuntimePermission "setIO";

};

grant codeBase "file:${wd.slave.home.url}/script/lib/-" {
        permission java.io.FilePermission "${wd.slave.deploy.dir}${/}-", "read";
        permission java.lang.RuntimePermission "createClassLoader";
        permission java.lang.RuntimePermission "getProtectionDomain";
};

// grant a shared components access (keep in mind if adding permissions here that deploy code base below may also require them)

grant codeBase "file:${wd.slave.home.url}/installed/-" {
        
        permission java.security.AllPermission;

        // read files from within installed
        permission java.io.FilePermission "${wd.slave.home.dir}${/}installed${/}-", "read";
        
        // needed for logging & LogSteps to work
        permission java.io.FilePermission "${wd.slave.home.dir}${/}conf${/}-", "read";
        
		permission java.util.PropertyPermission "*", "read";
        permission com.capeclear.mediation.MediationContextPermission "setInternal";

        // full access to io tmp dir
        permission java.io.FilePermission "${java.io.tmpdir}", "read,write,delete";
        permission java.io.FilePermission "${java.io.tmpdir}${/}-", "read,write,delete";
};

// grant a cloud assembly access (keep in mind if adding permissions here that installed code base above may also require them)

grant codeBase "file:${wd.slave.deploy.url}/-" {

        //for saxon
        permission java.io.FilePermission "${wd.slave.home.dir}", "read";

        permission java.io.FilePermission "${wd.slave.deploy.dir}${/}-", "read";

        // needed for logging & LogSteps to work
        permission java.io.FilePermission "${wd.slave.home.dir}${/}conf${/}-", "read";
        permission java.util.PropertyPermission "capeclear.logger.layout", "read";
        permission java.util.PropertyPermission "cc.requestid.logs.location", "read";
        permission java.util.PropertyPermission "java.io.tmpdir", "read";

        // full access to io tmp dir
        permission java.io.FilePermission "${java.io.tmpdir}", "read,write,delete";
        permission java.io.FilePermission "${java.io.tmpdir}${/}-", "read,write,delete";

        // jax ws
        permission java.util.PropertyPermission "xml.catalog.*", "read";
        permission java.util.PropertyPermission "com.sun.xml.internal.ws.api.pipe.Fiber.serialize", "read";
        permission java.util.PropertyPermission "com.sun.xml.internal.ws.api.streaming.XMLStreamWriterFactory.woodstox", "read";
        permission java.util.PropertyPermission "com.sun.xml.internal.ws.api.streaming.XMLStreamWriterFactory.noPool", "read";
        permission java.util.PropertyPermission "wd.slave.http.port", "read";
        
        permission java.lang.RuntimePermission "accessClassInPackage.com.sun.xml.internal.ws.developer";
        permission java.lang.RuntimePermission "accessClassInPackage.com.sun.xml.internal.ws";
        permission java.lang.RuntimePermission "accessClassInPackage.com.sun.xml.internal.ws.api.message";
        permission java.lang.RuntimePermission "accessClassInPackage.com.sun.xml.internal.ws.fault";
        permission java.lang.RuntimePermission "accessClassInPackage.com.sun.xml.internal.bind.api";
        permission java.lang.RuntimePermission "accessClassInPackage.sun.reflect";
        permission java.lang.RuntimePermission "accessDeclaredMembers";
        
        permission java.lang.reflect.ReflectPermission "suppressAccessChecks";

        permission java.lang.RuntimePermission "setContextClassLoader";

        permission java.util.PropertyPermission "com.sun.metro.soap.dump", "read";
        permission java.util.PropertyPermission "com.sun.metro.soap.dump.*", "read";
        permission java.util.PropertyPermission "com.sun.xml.internal.ws.assembler.jaxws.*", "read";
        permission java.util.PropertyPermission "com.sun.xml.internal.ws.dump.*", "read";

        // GRIDCM-7140
        permission java.util.PropertyPermission "com.sun.org.apache.xml.internal.dtm.DTMManager", "read,write";
        permission java.util.PropertyPermission "java.runtime.name", "read";
};

grant codeBase "file:${wd.slave.deploy.url}/wmlToExcel/wmlToExcelE2/WSAR-INF/lib/wmlToExcelE2.jar" {
        // wmlToExcel
        permission java.util.PropertyPermission "*", "read,write";
        permission java.lang.RuntimePermission "getClassLoader";
};

grant codeBase "file:${wd.slave.deploy.url}/LargeReportsE2/wmlToExcelE2/WSAR-INF/lib/wmlToExcelE2.jar" {
        // wmlToExcel on LargeReportsE2
        permission java.util.PropertyPermission "*", "read,write";
        permission java.lang.RuntimePermission "getClassLoader";
};

grant codeBase "file:${wd.slave.deploy.url}/LargeReportsE2/LargeReportsE2/WSAR-INF/lib/LargeReportsE2.jar" {
        // LargeReportsE2
        permission java.util.PropertyPermission "wd.largereports.*", "read";
};

grant codeBase "file:${wd.slave.deploy.url}/EnterpriseInterfaceBuilder/EIBSharedComponents/WSAR-INF/lib/EIBSharedComponents.jar" {
        // EIBSharedComponents
        permission java.util.PropertyPermission "*", "read";
};

grant codeBase "file:${wd.slave.home.url}/installed/BIRTEngine470/-" {

        // permission for the BIRT Engine
        permission java.util.PropertyPermission "*", "read";
        permission java.util.logging.LoggingPermission "control";
        permission java.lang.RuntimePermission "createClassLoader";
        permission java.lang.RuntimePermission "getClassLoader";
        permission java.lang.RuntimePermission "getProtectionDomain";
        permission java.lang.RuntimePermission "accessDeclaredMembers";
        permission java.lang.RuntimePermission "setContextClassLoader";
        permission java.lang.reflect.ReflectPermission "suppressAccessChecks";
        permission com.capeclear.mediation.MediationContextPermission "setInternal";
        permission com.capeclear.mediation.MediationContextPermission "setSecureBaseURL";
        permission javax.security.auth.AuthPermission "modifyCredentials";

        // read a config file
        permission java.io.FilePermission "templates/TOCDefaultValue.xml", "read";
        permission java.io.FilePermission "${wd.slave.home.dir}${/}conf${/}-", "read";
        
        // read the java fonts
        permission java.io.FilePermission "${java.home}${/}lib${/}fonts", "read";
        permission java.io.FilePermission "${java.home}${/}lib${/}fonts${/}-", "read";
        
        // allow birt create a logger
        permission java.util.logging.LoggingPermission "control";
        
        // allow birt to switch to https connections for image retrieval
        permission java.lang.RuntimePermission "setFactory";
};

grant codeBase "file:${wd.slave.home.url}/installed/BIRTEngine470/WSAR-INF/lib/org.mozilla.javascript_1.7.5.v201504281450.jar" {
        permission java.io.FilePermission "${wd.slave.deploy.dir}${/}-", "read";
        permission java.lang.RuntimePermission "createClassLoader";
        permission java.lang.RuntimePermission "getProtectionDomain";
};

grant codeBase "file:${wd.slave.home.url}/installed/BIRTEngine442/-" {

        // permission for the BIRT Engine
        permission java.util.PropertyPermission "*", "read";
        permission java.util.logging.LoggingPermission "control";
        permission java.lang.RuntimePermission "createClassLoader";
        permission java.lang.RuntimePermission "getClassLoader";
        permission java.lang.RuntimePermission "getProtectionDomain";
        permission java.lang.RuntimePermission "accessDeclaredMembers";
        permission java.lang.RuntimePermission "setContextClassLoader";
        permission java.lang.reflect.ReflectPermission "suppressAccessChecks";
        permission com.capeclear.mediation.MediationContextPermission "setInternal";
        permission com.capeclear.mediation.MediationContextPermission "setSecureBaseURL";
        permission javax.security.auth.AuthPermission "modifyCredentials";

        // read a config file
        permission java.io.FilePermission "templates/TOCDefaultValue.xml", "read";
        permission java.io.FilePermission "${wd.slave.home.dir}${/}conf${/}-", "read";
        
        // read the java fonts
        permission java.io.FilePermission "${java.home}${/}lib${/}fonts", "read";
        permission java.io.FilePermission "${java.home}${/}lib${/}fonts${/}-", "read";
        
        // allow birt create a logger
        permission java.util.logging.LoggingPermission "control";
        
        // allow birt to switch to https connections for image retrieval
        permission java.lang.RuntimePermission "setFactory";
};


grant codeBase "file:${wd.slave.home.url}/installed/BIRTEngine442/WSAR-INF/lib/org.eclipse.core.runtime_3.10.0.v20140318-2214.jar" {
        // permission for the BIRT Engine
       permission java.util.PropertyPermission "*", "read";
       permission java.util.PropertyPermission "*", "write";
};

grant codeBase "file:${wd.slave.home.url}/installed/BIRTEngine442/WSAR-INF/lib/org.eclipse.osgi_3.10.2.v20150203-1939.jar" {
        // permission for the BIRT Engine
        permission java.util.PropertyPermission "*", "read";
        permission java.util.PropertyPermission "*", "write";
};

grant codeBase "file:${wd.slave.home.url}/installed/BIRTEngine442/WSAR-INF/lib/org.eclipse.birt.runtime-4.4.2.6-WORKDAY.jar" {
        // permission for the BIRT Engine
       permission java.util.PropertyPermission "*", "read";
       permission java.util.PropertyPermission "*", "write";
};

grant codeBase "file:${wd.slave.home.url}/installed/BIRTEngine442/WSAR-INF/lib/org.eclipse.birt.runtime-4.4.2.7-WORKDAY.jar" {
        // permission for the BIRT Engine
       permission java.util.PropertyPermission "*", "read";
       permission java.util.PropertyPermission "*", "write";
};

grant codeBase "file:${output.root.url}/-" {
    permission java.security.AllPermission;
};

grant codeBase "file:${src.root.url}/extlib/-" {
    permission java.security.AllPermission;
};

grant codeBase "file:${src.root.url}/capeconnect/extlib/-" {
    permission java.security.AllPermission;
};

grant codeBase "file:${src.root.url}/buildtools/ant/-" {
    permission java.security.AllPermission;
};

grant codeBase "file:${ant.home.url}/-" {
    permission java.security.AllPermission;
};

grant codeBase "file:${src.root.url}/cloud/slave/test/data/security/lib" {
    permission java.util.PropertyPermission "*", "read";
};

grant codeBase "file:${src.root.url}/cloud/slave/test/data/security/installed" {
    permission java.util.PropertyPermission "*", "read";
};

grant codeBase "file:/C:/Users/katarzynak/AppData/Local/WD/studio/plugins/com.workday.assembly.debug.core_2018.36.2020/slave-lib/-" {

        permission java.security.AllPermission;

        permission java.util.PropertyPermission "*", "read";

        // for fop
        permission java.io.FilePermission "<<ALL FILES>>", "read";
        
	    // to read resources from jar files (e.g. spring/root.xml)
        permission java.io.FilePermission "${wd.slave.home.dir}${/}lib${/}-", "read";
        permission java.io.FilePermission "${wd.slave.home.dir}${/}saxon${/}-", "read";

        // full access to deploy dir
        permission java.io.FilePermission "${wd.slave.deploy.dir}", "read";
        permission java.io.FilePermission "${wd.slave.deploy.dir}${/}-", "read,write,delete";

        // read access to log dir
        permission java.io.FilePermission "${cc.requestid.logs.location}", "read";
        permission java.io.FilePermission "${cc.requestid.logs.location}${/}-", "read,write,delete";

        // full access to tmp dir
        permission java.io.FilePermission "${wd.slave.tmp.dir}", "read,write";
        permission java.io.FilePermission "${wd.slave.tmp.dir}${/}-", "read,write,delete";

        // full access to io tmp dir
        permission java.io.FilePermission "${java.io.tmpdir}", "read,write,delete";
        permission java.io.FilePermission "${java.io.tmpdir}${/}-", "read,write,delete";

        // read access to conf dir
        permission java.io.FilePermission "${wd.slave.home.dir}${/}conf${/}-", "read";

        // read access to installed dir
        permission java.io.FilePermission "${wd.slave.home.dir}${/}installed", "read";
        permission java.io.FilePermission "${wd.slave.home.dir}${/}installed${/}-", "read";

        permission java.net.SocketPermission "localhost:${wd.slave.http.port}", "accept,connect,listen";

        permission java.lang.RuntimePermission "accessDeclaredMembers";
        permission java.lang.reflect.ReflectPermission "suppressAccessChecks";
        permission java.lang.RuntimePermission "setContextClassLoader";

        permission java.lang.RuntimePermission "createClassLoader";
        permission java.lang.RuntimePermission "getClassLoader";

        // for ws-ut binding
        permission javax.security.auth.AuthPermission "modifyCredentials";
        permission javax.security.auth.AuthPermission "modifyPrivateCredentials";
        permission javax.security.auth.AuthPermission "modifyPrincipals";

        permission com.capeclear.mediation.MediationContextPermission "setInternal";
        permission com.capeclear.mediation.MediationContextPermission "setSecureBaseURL";
        permission com.capeclear.mediation.MediationContextPermission "demarcateDynamicJava";


        // for sftp, capeconnect and cloud-slave 
        permission java.util.PropertyPermission "*", "read,write";

        // if bouncycastle is not installed with JDK
        permission java.security.SecurityPermission "putProviderProperty.BC";
        permission java.security.SecurityPermission "insertProvider.BC";
        //this remove is used to work around the BC issue with the Dell endpoint
        permission java.security.SecurityPermission "removeProvider.BC";

        // for java-to-xml and xml-to-java
        permission java.lang.RuntimePermission "accessClassInPackage.sun.reflect";
};

// - This is the custom/dual policy security manager. Needs AllPermissions, otherwise things might break